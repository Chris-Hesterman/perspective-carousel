{"version":3,"sources":["components/Carousel/CarouselStyles.js","components/Facet/FacetStyles.js","components/Facet/Facet.js","components/Carousel/Carousel.js","utils.js","components/App/AppStyles.js","components/Form/FormStyles.js","components/Input/InputStyles.js","components/Input/Input.js","constants.js","components/Form/Form.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["StyledCarousel","styled","div","props","zAxis","StyledFacet","height","width","margin","angle","apothem","Facet","number","Carousel","time","useRef","Date","now","carouselRef","backSides","rotationAngle","facets","Array","keys","shift","numSides","length","radians","Math","PI","tangent","tan","abs","toFixed","findApothem","changeFacetColor","last","newBackSide","push","setFacetColor","useCallback","current","childNodes","forEach","node","isBehind","includes","textContent","style","background","color","map","facet","newAngle","useEffect","onClick","e","timeNow","target","parentNode","transform","ref","StyledApp","perspective","originY","StyledButton","button","StyledForm","form","isVisible","StyledInput","input","StyledLabel","label","Input","title","name","value","handleChange","step","type","onChange","names","labels","steps","Form","inputs","index","App","useState","facetInput","setFacetInput","widthInput","setWidthInput","heightInput","setHeightInput","marginInput","setMarginInput","perspectiveInput","setPerspectiveInput","originYInput","setOriginYInput","zAxisInput","setZAxisInput","setIsVisible","className","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8193bf91.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCarousel = styled.div`\n  transition: all 0.5s ease-in-out;\n  transform-origin: ${(props) => `50% 50% ${props.zAxis}rem`};\n  transform-style: preserve-3d;\n  transform: ${(props) => `translateZ(${props.zAxis}rem)`};\n`;\n","import styled from 'styled-components';\n\nexport const StyledFacet = styled.div`\n  display: flex;\n  color: lime;\n  font-size: 2rem;\n  justify-content: center;\n  align-items: center;\n  background: rgba(200, 200, 200, 0.5);\n  border: 1px solid lime;\n  height: ${(props) => `${props.height}rem`};\n  width: ${(props) => `${props.width}rem`};\n  &:hover {\n    cursor: pointer;\n  }\n  position: absolute;\n  margin: ${(props) => `${props.margin / 2}rem`};\n  left: ${(props) => `${-props.width / 2}rem`};\n  top: ${(props) => `${-props.height / 2}rem`};\n  transition: all 0.2s ease-in;\n  transform: ${(props) =>\n    `rotateY(${props.angle}deg) translateZ(${props.apothem}rem)`};\n`;\n","import { StyledFacet } from './FacetStyles';\n\nconst Facet = ({ number, angle, apothem, width, height, margin }) => {\n  return (\n    <StyledFacet\n      angle={angle}\n      apothem={apothem}\n      width={width}\n      height={height}\n      margin={margin}\n    >\n      {number}\n    </StyledFacet>\n  );\n};\n\nexport default Facet;\n","import { useRef, useEffect, useCallback } from 'react';\nimport { findApothem, findAngle } from '../../utils';\nimport { StyledCarousel } from './CarouselStyles';\nimport Facet from '../Facet/Facet';\n\nconst Carousel = ({ number, width, height, margin, zAxis }) => {\n  const time = useRef(Date.now());\n  const carouselRef = useRef();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  let backSides = [];\n  let rotationAngle = 0;\n  let facets = [...Array(number + 1).keys()];\n  facets.shift();\n\n  const apothem = findApothem(facets.length, width + margin);\n  const angle = findAngle(facets.length);\n\n  const handleClick = (e) => {\n    const timeNow = Date.now();\n\n    if (timeNow - time.current > 700) {\n      rotationAngle += angle;\n      time.current = timeNow;\n      e.target.parentNode.style.transform = `rotateY(${-rotationAngle}deg) translateZ(${zAxis}rem)`;\n      changeFacetColor();\n    }\n  };\n\n  const changeFacetColor = () => {\n    const last = backSides[backSides.length - 1];\n    const newBackSide = last === facets.length ? 1 : last + 1;\n\n    backSides.shift();\n    backSides.push(newBackSide);\n    setFacetColor(carouselRef, backSides);\n  };\n\n  const setFacetColor = useCallback(() => {\n    carouselRef.current.childNodes.forEach((node) => {\n      const isBehind = backSides.includes(+node.textContent);\n\n      node.style.background = isBehind\n        ? 'rgba(100, 100, 100, .7)'\n        : 'rgba(200, 200, 200, 0.5)';\n      node.style.color = isBehind ? 'transparent' : 'lime';\n    });\n  }, [backSides]);\n\n  facets = facets.map((facet) => {\n    const newAngle = angle * (facet - 1);\n\n    if (newAngle >= 90 && newAngle <= 270) {\n      backSides.push(facet);\n    }\n    return (\n      <Facet\n        key={facet}\n        number={facet}\n        angle={newAngle}\n        apothem={apothem}\n        width={width}\n        height={height}\n      />\n    );\n  });\n\n  useEffect(() => {\n    setFacetColor();\n  }, [backSides, setFacetColor]);\n\n  return (\n    <StyledCarousel\n      angle={angle}\n      onClick={handleClick}\n      ref={carouselRef}\n      zAxis={zAxis}\n    >\n      {facets}\n    </StyledCarousel>\n  );\n};\n\nexport default Carousel;\n","export const findApothem = (numSides, length) => {\n  const radians = Math.PI / numSides;\n  const tangent = Math.tan(radians);\n\n  return +Math.abs(length / (2 * tangent)).toFixed(2);\n};\n\nexport const findAngle = (numSides) => {\n  return +(360 / numSides).toFixed(2);\n};\n\nexport const findRadius = (numSides, length) => {\n  const radians = Math.PI / numSides;\n  const sin = Math.sin(radians);\n\n  return +Math.abs(length / (2 * sin)).toFixed(2);\n};\n","import styled from 'styled-components';\n\nexport const StyledApp = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background: url('./assets/bigspace.jpg');\n  background-size: cover;\n  overflow: hidden;\n  transition: all 1s ease-in;\n  transform-style: preserve-3d;\n  transform-origin: ${(props) => `50% 50% ${props.zAxis}rem`};\n  perspective: ${(props) => `${props.perspective}rem`};\n  perspective-origin: ${(props) => `50% ${props.originY}%`};\n`;\n\nexport const StyledButton = styled.button`\n  display: inline-block;\n  position: absolute;\n  top: 0.5rem;\n  left: 1rem;\n  font-size: 1rem;\n  width: 15rem;\n  height: 2.5rem;\n  outline: none;\n  border: 1px solid red;\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    transform: translate(2px, 2px);\n    border-radius: 5px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  visibility: ${(props) => `${props.isVisible ? 'visible' : 'hidden'}`};\n  flex-direction: column;\n  position: absolute;\n  top: 3.5rem;\n  left: 0;\n`;\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  height: 2rem;\n  width: 5rem;\n  font-size: 2rem;\n  margin-right: 0.5rem;\n  outline: none;\n`;\n\nexport const StyledLabel = styled.label`\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 2rem;\n  border: 3px double lime;\n  margin-left: 1rem;\n`;\n","import { StyledLabel, StyledInput } from './InputStyles';\n\nconst Input = ({ title, name, value, handleChange, step }) => {\n  return (\n    <StyledLabel>\n      <StyledInput\n        name={name}\n        type=\"number\"\n        value={value}\n        onChange={handleChange}\n        step={step}\n      />\n      {title}\n    </StyledLabel>\n  );\n};\n\nexport default Input;\n","export const names = [\n  'facet',\n  'width',\n  'height',\n  'margin',\n  'perspective',\n  'originY',\n  'zAxis'\n];\n\nexport const labels = [\n  '# FACETS',\n  'WIDTH - rem',\n  'HEIGHT - rem',\n  'MARGIN - rem',\n  'PERSPECTIVE - rem',\n  'Y ORIGIN - %',\n  'Z AXIS -rem'\n];\n\nexport const steps = [1, 5, 5, 2, 10, 5, 5];\n","import { StyledForm } from './FormStyles';\nimport Input from '../Input/Input';\nimport { names, labels, steps } from '../../constants';\n\nconst Form = (props) => {\n  const inputs = names.map((name, index) => {\n    const value = props[`${name}Input`];\n\n    return (\n      <Input\n        key={name}\n        name={names[index]}\n        type=\"number\"\n        value={value}\n        handleChange={props.handleChange}\n        step={steps[index]}\n        title={labels[index]}\n      />\n    );\n  });\n  return <StyledForm isVisible={props.isVisible}>{inputs}</StyledForm>;\n};\n\nexport default Form;\n","import { useState } from 'react';\nimport Carousel from '../Carousel/Carousel';\nimport { StyledApp, StyledButton } from './AppStyles';\nimport Form from '../Form/Form';\n\nconst App = () => {\n  const [facetInput, setFacetInput] = useState(3);\n  const [widthInput, setWidthInput] = useState(15);\n  const [heightInput, setHeightInput] = useState(10);\n  const [marginInput, setMarginInput] = useState(0);\n  const [perspectiveInput, setPerspectiveInput] = useState(80);\n  const [originYInput, setOriginYInput] = useState(80);\n  const [zAxisInput, setZAxisInput] = useState(0);\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleChange = (e) => {\n    console.log('handlingChange');\n    if (e.target.name === 'facet') {\n      setFacetInput(+e.target.value);\n    }\n    if (e.target.name === 'width') {\n      setWidthInput(+e.target.value);\n    }\n    if (e.target.name === 'height') {\n      setHeightInput(+e.target.value);\n    }\n    if (e.target.name === 'margin') {\n      setMarginInput(+e.target.value);\n    }\n    if (e.target.name === 'perspective') {\n      setPerspectiveInput(+e.target.value);\n    }\n    if (e.target.name === 'originY') {\n      setOriginYInput(+e.target.value);\n    }\n    if (e.target.name === 'zAxis') {\n      setZAxisInput(+e.target.value);\n    }\n  };\n\n  const handleClick = (e) => {\n    setIsVisible(!isVisible);\n  };\n\n  return (\n    <StyledApp\n      className=\"App\"\n      perspective={perspectiveInput}\n      originY={originYInput}\n      zAxis={zAxisInput}\n    >\n      <StyledButton onClick={handleClick}>\n        {isVisible ? 'HIDE SETTINGS' : 'SHOW SETTINGS'}\n      </StyledButton>\n      <Carousel\n        number={facetInput}\n        width={widthInput}\n        height={heightInput}\n        margin={marginInput}\n        zAxis={zAxisInput}\n      />\n      <Form\n        isVisible={isVisible}\n        facetInput={facetInput}\n        widthInput={widthInput}\n        heightInput={heightInput}\n        marginInput={marginInput}\n        perspectiveInput={perspectiveInput}\n        originYInput={originYInput}\n        zAxisInput={zAxisInput}\n        handleChange={handleChange}\n      />\n    </StyledApp>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}